# Initially coming from 
# https://github.com/VioletGiraffe/qmake-project-template/blob/master/.github/workflows/CI.yml
# Used according to Apache-2.0 license

name: Build

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug

  push:
    branches: [ master Development]
  pull_request:
    branches: [ master Development]

jobs:
  build-project:
    name: Build Project
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.1

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: 6.2.*

    - name: Windows - setup MSBuild
      if: startsWith(matrix.os, 'windows')
      uses: microsoft/setup-msbuild@v1.3

    - name: Configure Project
      uses: threeal/cmake-action@v1.3.0
      with:
        generator: Ninja
        c-compiler: clang
        cxx-compiler: clang++
      
    - name: Build Project
      run: cmake --build build

#    - name: Windows
#      if: startsWith(matrix.os, 'windows')
#      shell: cmd
#      run: |
#        %Qt5_DIR%\bin\qmake.exe -v
#        call "%programfiles%\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
#        %Qt5_DIR%\bin\qmake.exe -tp vc -r
#        msbuild /t:Build /p:Configuration=Release;PlatformToolset=v143

#    - name: Deployment Package
#      run: |
#        mkdir ${{github.workspace}}\release\all\
#        cp ${{github.workspace}}/release/FractalsDiscovery.exe ${{github.workspace}}\release\all\
#        cd ${{github.workspace}}\release\all\
#        windeployqt.exe FractalsDiscovery.exe --release
#        ls
#        Compress-Archive -Path ${{github.workspace}}\release\all\ -DestinationPath ${{github.workspace}}\release\FractalsDiscovery.zip
 
#    Upload Artifact
    - name: Upload production-ready build files
      uses: actions/upload-artifact@v3
      with:
         name: production
         path: ./release

#    - name: Mac
#      if: startsWith(matrix.os, 'macos')
#      working-directory: ${{env.GITHUB_WORKSPACE}}
#      run: |
#        clang --version
#        $Qt5_DIR/bin/qmake -r
#        make -j

#    - name: Linux
#      if: startsWith(matrix.os, 'ubuntu')
#      working-directory: ${{env.GITHUB_WORKSPACE}}
#      run: |
#        sudo apt update -y; sudo apt install -qq gcc-12 g++-12
#        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 50
#        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 50
#        g++ --version
#        $Qt5_DIR/bin/qmake -r
#        make -j

    # - name: Test run
    #   if: startsWith(matrix.os, 'macos')
    #   run: ./tests/bin/tests.app/Contents/MacOS/tests
      
    # - name: Test run
    #   if: startsWith(matrix.os, 'ubuntu')
    #   run: ./tests/bin/tests

    # - name: Test run
    #   if: startsWith(matrix.os, 'widows')
    #   run: ./tests/bin/tests.exe
    
