# Initially coming from 
# https://github.com/VioletGiraffe/qmake-project-template/blob/master/.github/workflows/CI.yml
# Used according to Apache-2.0 license

name: Build

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
  push:
    branches: 
      - master 
      - Development 
  pull_request:
    branches:
      - master 
      - Development

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4.1.1

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: 6.2.*

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Install Doxygen
      uses: ssciwr/doxygen-install@v1
 
    - name: Deployment Package
      run: |
        mkdir ${{github.workspace}}\release\all\
        cp ${{github.workspace}}/build/gui/Release/FractalsDiscovery.exe ${{github.workspace}}\release\all\
        cd ${{github.workspace}}\release\all\
        windeployqt.exe FractalsDiscovery.exe --release
        ls
        Compress-Archive -Path ${{github.workspace}}\release\all\ -DestinationPath ${{github.workspace}}\release\FractalsDiscovery.zip
 
#    Upload Artifact
    - name: Upload production-ready build files
      uses: actions/upload-artifact@v4
      with:
         path: ${{github.workspace}}/release/FractalsDiscovery.zip

#    - name: Mac
#      if: startsWith(matrix.os, 'macos')
#      working-directory: ${{env.GITHUB_WORKSPACE}}
#      run: |
#        clang --version
#        $Qt5_DIR/bin/qmake -r
#        make -j

#    - name: Linux
#      if: startsWith(matrix.os, 'ubuntu')
#      working-directory: ${{env.GITHUB_WORKSPACE}}
#      run: |
#        sudo apt update -y; sudo apt install -qq gcc-12 g++-12
#        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 50
#        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 50
#        g++ --version
#        $Qt5_DIR/bin/qmake -r
#        make -j

    # - name: Test run
    #   if: startsWith(matrix.os, 'macos')
    #   run: ./tests/bin/tests.app/Contents/MacOS/tests
      
    # - name: Test run
    #   if: startsWith(matrix.os, 'ubuntu')
    #   run: ./tests/bin/tests

    # - name: Test run
    #   if: startsWith(matrix.os, 'widows')
    #   run: ./tests/bin/tests.exe
    
